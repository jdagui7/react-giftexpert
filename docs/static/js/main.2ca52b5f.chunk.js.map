{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGTC,mBAAS,IAHA,mBAGtCC,EAHsC,KAG1BC,EAH0B,KAqB7C,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAQlB,SAEE,uBACMO,KAAK,OACLC,MAAST,EACTU,SAtBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGDI,MAAOF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCDPO,EAAc,SAAC,GAAoB,EAAnBJ,GAAoB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAInC,OACI,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAOf,EAAMgB,IAAON,IACxB,4BAAKA,QCJJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA0BxC,OAnBAC,qBAAU,WAENxB,EAASC,GACJwB,MAAM,SAAAC,GAGCH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAM1B,CAACpB,IAKIqB,EDtByBK,CAAc1B,GAAhCa,EAHuB,EAG7BN,KAAaa,EAHgB,EAGhBA,QAGrB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAIQH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEIA,GADEA,EAAIC,aEoBdgB,EAvCM,WAAO,MAIYzC,mBAAS,CAAC,wBAJtB,mBAIjB0C,EAJiB,KAIL3C,EAJK,KAaxB,OACE,qCACE,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACxB,cAAC,EAAD,CAEAA,SAAWA,GADNA,Y,MCpBrB6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2ca52b5f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategories}) => {\n\n\n    const [inputValue, setinputValue] = useState(''); \n\n    const handleInputChange = (e) =>{\n        setinputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n\n        if( inputValue.trim().length>2){\n            setCategories(cats => [inputValue,...cats, ]);\n            setinputValue('');\n        }\n\n        \n\n    }\n    \n    return (\n        <form onSubmit={ handleSubmit}>\n       \n          <input \n                type=\"text\"\n                value= { inputValue }\n                onChange={ handleInputChange}\n            />\n        </ form>\n    )\n}\n\nAddCategory.propTypes ={\n    setCategories:PropTypes.func.isRequired\n}\n","\n\n\nexport const getGifs = async( category) =>{\n\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=CwcrrKrndvonyrucBGRkK9GCeHVZpNOy`;\n    const resp= await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map( img =>{\n        return{\n            id: img.id,\n            title:img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ({id, title,url}) => {\n\n   // console.log(id,title,url);\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n           <img src ={ url } alt ={ title}/>\n            <p>{ title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n//import { getGifs } from '../helpers/getGifs';\n\nexport const GifGrid = ( {category} ) => {\n\n    // const [images, setImages] = useState([]);\n    const { data: images,loading} = useFetchGifs( category);\n\n\n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n       \n        <div className=\"card-grid\">\n           \n         \n            {\n                images.map( img =>(\n                   <GifGridItem \n                   key={ img.id}\n                   {...img}\n                   />\n                ))\n            }\n        </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs} from '../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category ) => {\n   \n    const [state, setState] = useState({\n        data:[],\n        loading: true\n    });\n\n    useEffect(() =>{\n        \n        getGifs( category )\n            .then( imgs =>{\n\n            \n                    setState({\n                        data:imgs,\n                        loading:false\n                    });\n            \n               \n            })\n\n    },[category])\n\n  \n\n\n    return state; // \n}\n","import React ,{ useState }from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GitExpertApp = (  ) =>{\n\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n\n    const [categories, setCategories] = useState(['The Big Bang Theory']);\n\n    // const handleAdd = (e) =>{\n    //     setCategories([...categories , 'Rick And Morty']);\n\n    //     console.log(categories)\n\n    // }\n\n    return (\n      <>\n        <h1> GitExpertApp</h1>\n        <AddCategory setCategories={ setCategories } />\n        <hr/>\n\n       \n\n        <ol>\n           { \n                categories.map( category =>(\n                <GifGrid \n                key={category} \n                category={ category } />\n                ))\n            }\n        </ol>\n\n       \n      </>\n\n    )\n\n\n}\n\nexport default GitExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GitExpertApp from './GitExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GitExpertApp />,\n    document.getElementById('root')\n);\n\n//GitExpertApp\n//<h2> GitExtertApp</h2>\n//<hr/>\n"],"sourceRoot":""}